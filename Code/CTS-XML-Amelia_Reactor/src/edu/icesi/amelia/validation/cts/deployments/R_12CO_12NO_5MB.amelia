package edu.icesi.amelia.validations.cts.deployments 

import org.amelia.dsl.lib.util.RetryableDeployment
import edu.icesi.amelia.validation.cts.subsystems.Compilation
import org.amelia.dsl.lib.descriptors.Host
import edu.icesi.amelia.validation.cts.subsystems.ExternalProbe

import edu.icesi.amelia.validation.cts.monitors.Monitor_1 
import edu.icesi.amelia.validation.cts.monitors.Monitor_2
import edu.icesi.amelia.validation.cts.monitors.Monitor_3
import edu.icesi.amelia.validation.cts.monitors.Monitor_4
import edu.icesi.amelia.validation.cts.monitors.Monitor_5
import edu.icesi.amelia.validation.cts.monitors.Monitor_6
import edu.icesi.amelia.validation.cts.monitors.Monitor_7
import edu.icesi.amelia.validation.cts.monitors.Monitor_8
import edu.icesi.amelia.validation.cts.monitors.Monitor_9
import edu.icesi.amelia.validation.cts.monitors.Monitor_10
import edu.icesi.amelia.validation.cts.monitors.Monitor_11
import edu.icesi.amelia.validation.cts.monitors.Monitor_12
import edu.icesi.amelia.validation.cts.monitors.Monitor_13
import edu.icesi.amelia.validation.cts.subsystems.JMeter_12NO
import edu.icesi.amelia.validation.cts.subsystems.LoadBalancer
import edu.icesi.amelia.validation.cts.subsystems.StoreProcedures
import edu.icesi.amelia.validation.cts.subsystems.Bridge_Server

includes edu.icesi.amelia.validation.cts.subsystems.ExternalProbe
includes edu.icesi.amelia.validation.cts.subsystems.Compilation
includes edu.icesi.amelia.validation.cts.subsystems.LoadBalancer
includes edu.icesi.amelia.validation.cts.subsystems.StoreProcedures
includes edu.icesi.amelia.validation.cts.subsystems.Bridge_Server
includes edu.icesi.amelia.validation.cts.subsystems.JMeter_12NO

includes edu.icesi.amelia.validation.cts.monitors.Monitor_1
includes edu.icesi.amelia.validation.cts.monitors.Monitor_2
includes edu.icesi.amelia.validation.cts.monitors.Monitor_3
includes edu.icesi.amelia.validation.cts.monitors.Monitor_4
includes edu.icesi.amelia.validation.cts.monitors.Monitor_5
includes edu.icesi.amelia.validation.cts.monitors.Monitor_6
includes edu.icesi.amelia.validation.cts.monitors.Monitor_7
includes edu.icesi.amelia.validation.cts.monitors.Monitor_8
includes edu.icesi.amelia.validation.cts.monitors.Monitor_9
includes edu.icesi.amelia.validation.cts.monitors.Monitor_10
includes edu.icesi.amelia.validation.cts.monitors.Monitor_11
includes edu.icesi.amelia.validation.cts.monitors.Monitor_12
includes edu.icesi.amelia.validation.cts.monitors.Monitor_13


deployment R_12CO_12NO_5MB
{
	
	java.lang.System.setProperty("amelia.color_output", "false")
	
	//-------------------------------------------------------------------
	//<Variables>
	//-------------------------------------------------------------------
	
	//Bd Connection
	val bdConnection = 1
	
	//Num Components
	val numComponents = 12
	
	//Deployment type
	val deploymentType = 3
	
	//Compilation host
	val Host compilationHost = new  Host("hgrid17",21,22,"carvajal","hgrid18","compilation")
	
	//External Probe
	val Host hostExternalProbe = new  Host("hgrid17",21,22,"carvajal","hgrid18","rabbit")
	val String reportLoc = "/home/carvajal/Documents/new_Carvajal/REPORTE/"
	
	//Components host
	
	val Host componentsHost = new  Host("hgrid16",21,22,"carvajal","hgrid18","components")
	
	//SPs
	val spHost1 = new Host("hgrid1",21,22,"carvajal","hgrid18","sp1")
	val spHost2 = new Host("hgrid18",21,22,"carvajal","hgrid18","sp2")
	val spHost3 = new Host("hgrid20",21,22,"carvajal","hgrid18","sp3")
	val spHost4 = new Host("hgrid11",21,22,"carvajal","hgrid18","sp4")
	
	val spHost5 = new Host("hgrid13",21,22,"carvajal","hgrid18","sp5")
	val spHost6 = new Host("hgrid6",21,22,"carvajal","hgrid18","sp6")
	val spHost7 = new Host("hgrid9",21,22,"carvajal","hgrid18","sp7")
	val spHost8 = new Host("hgrid10",21,22,"carvajal","hgrid18","sp8")
	
	val spHost9 = new Host("hgrid4",21,22,"carvajal","hgrid18","sp9")
	val spHost10 = new Host("hgrid5",21,22,"carvajal","hgrid18","sp10")
	val spHost11 = new Host("hgrid7",21,22,"carvajal","hgrid18","sp11")
	val spHost12 = new Host("hgrid8",21,22,"carvajal","hgrid18","sp12")
	
	//Compilation
	val codeSourcesFolder = "/home/carvajal/nfs/carvajal/sourcecode";
	
	val associatedHosts = #[componentsHost, spHost1, spHost2, spHost3, spHost4, spHost5, spHost6, spHost7, spHost8, spHost9, spHost10, spHost11, spHost12]
	
	val spHosts = #[spHost1, spHost2, spHost3, spHost4, spHost5, spHost6, spHost7, spHost8, spHost9, spHost10, spHost11, spHost12]
	
	//Monitors
	
	//JMeter
	val Host hostJmeter = new  Host("hgrid16",21,22,"carvajal","hgrid18","jmeter")
	
	//-------------------------------------------------------------------
	//</Variables>
	//-------------------------------------------------------------------
	
	val deployHelper = new RetryableDeployment
 
	
	for(i: 1..1)
	{
		deployHelper.deploy([
			
			add(new Compilation(compilationHost, codeSourcesFolder,associatedHosts,true))
 			add(new ExternalProbe(hostExternalProbe))
			add(new LoadBalancer(componentsHost))
			add(new StoreProcedures(bdConnection, numComponents, spHost1, spHost2, spHost3, spHost4, spHost5, spHost6, spHost7, spHost8, spHost9, spHost10, spHost11, spHost12, spHosts))
			add(new Bridge_Server(componentsHost, deploymentType))
			add(new Monitor_1(spHost1,"sp1"))
			add(new Monitor_2(spHost2,"sp2"))
			add(new Monitor_3(spHost3,"sp3"))
			add(new Monitor_4(spHost4,"sp4"))
			add(new Monitor_5(spHost5,"sp5"))
			add(new Monitor_6(spHost6,"sp6"))
			add(new Monitor_7(spHost7,"sp7"))
			add(new Monitor_8(spHost8,"sp8"))
			add(new Monitor_9(spHost9,"sp9"))
			add(new Monitor_10(spHost10,"sp10"))
			add(new Monitor_11(spHost11,"sp11"))
			add(new Monitor_12(spHost12,"sp12"))
			add(new Monitor_13(componentsHost,"components")) 
			
			add(new JMeter_12NO(hostJmeter, "XML-REST-5MB.jmx", hostExternalProbe, reportLoc))
			start(true)
			
		],1)
	}

}
	