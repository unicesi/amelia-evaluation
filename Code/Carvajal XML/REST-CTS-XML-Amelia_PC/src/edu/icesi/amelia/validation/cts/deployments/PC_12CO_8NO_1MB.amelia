package edu.icesi.amelia.validation.cts.deployments

import org.amelia.dsl.lib.util.RetryableDeployment
import edu.icesi.amelia.validation.cts.subsystems.Compilation
import org.amelia.dsl.lib.descriptors.Host
import edu.icesi.amelia.validation.cts.subsystems.Queue
import edu.icesi.amelia.validation.cts.subsystems.Consumers
import edu.icesi.amelia.validation.cts.subsystems.Run_Bridge_Intermediate_Server
import edu.icesi.amelia.validation.cts.jmeter.JMeter_Restore_8NO
import edu.icesi.amelia.validation.cts.subsystems.ExternalProbe

import edu.icesi.amelia.validation.cts.monitors.Monitor_1
import edu.icesi.amelia.validation.cts.monitors.Monitor_2
import edu.icesi.amelia.validation.cts.monitors.Monitor_3
import edu.icesi.amelia.validation.cts.monitors.Monitor_4
import edu.icesi.amelia.validation.cts.monitors.Monitor_5
import edu.icesi.amelia.validation.cts.monitors.Monitor_6
import edu.icesi.amelia.validation.cts.monitors.Monitor_7
import edu.icesi.amelia.validation.cts.monitors.Monitor_8
import edu.icesi.amelia.validation.cts.monitors.Monitor_9
import edu.icesi.amelia.validation.cts.monitors.Monitor_10
import edu.icesi.amelia.validation.cts.monitors.Monitor_11

includes edu.icesi.amelia.validation.cts.subsystems.ExternalProbe
includes edu.icesi.amelia.validation.cts.subsystems.Compilation
includes edu.icesi.amelia.validation.cts.subsystems.Queue
includes edu.icesi.amelia.validation.cts.subsystems.Consumers
includes edu.icesi.amelia.validation.cts.subsystems.Run_Bridge_Intermediate_Server
includes edu.icesi.amelia.validation.cts.jmeter.JMeter_Restore_8NO

includes edu.icesi.amelia.validation.cts.monitors.Monitor_1
includes edu.icesi.amelia.validation.cts.monitors.Monitor_2
includes edu.icesi.amelia.validation.cts.monitors.Monitor_3
includes edu.icesi.amelia.validation.cts.monitors.Monitor_4
includes edu.icesi.amelia.validation.cts.monitors.Monitor_5
includes edu.icesi.amelia.validation.cts.monitors.Monitor_6
includes edu.icesi.amelia.validation.cts.monitors.Monitor_7
includes edu.icesi.amelia.validation.cts.monitors.Monitor_8
includes edu.icesi.amelia.validation.cts.monitors.Monitor_9
includes edu.icesi.amelia.validation.cts.monitors.Monitor_10
includes edu.icesi.amelia.validation.cts.monitors.Monitor_11


deployment PC_12CO_8NO_1MB
{
	
	java.lang.System.setProperty("amelia.color_output", "false")
	
	//-------------------------------------------------------------------
	//<Variables>
	//-------------------------------------------------------------------
	
	//NumComps
	val Integer numCom = 12
	
	val Integer numNodes = 8
	
	
	//External Probe
	val Host hostExternalProbe = new  Host("hgrid17",21,22,"carvajal","hgrid18","rabbit")
	val String reportLoc = "/home/carvajal/Documents/new_Carvajal/REPORTE/"
	
	//Consumers
	val hgrid1 = new Host("hgrid1",21,22,"carvajal","hgrid18","h1")
	val hgrid18 = new Host("hgrid18",21,22,"carvajal","hgrid18","h18")
	val hgrid20 = new Host("hgrid20",21,22,"carvajal","hgrid18","h20")
	val hgrid4 = new Host("hgrid4",21,22,"carvajal","hgrid18","h4")
	val hgrid5 = new Host("hgrid5",21,22,"carvajal","hgrid18","h5")
	val hgrid6 = new Host("hgrid6",21,22,"carvajal","hgrid18","h6")
	val hgrid7 = new Host("hgrid7",21,22,"carvajal","hgrid18","h7")
	val hgrid8 = new Host("hgrid8",21,22,"carvajal","hgrid18","h8")
	val hgrid9 = new Host("hgrid9",21,22,"carvajal","hgrid18","h9")
	val hgrid10 = new Host("hgrid10",21,22,"carvajal","hgrid18","h10")
	val hgrid11 = new Host("hgrid11",21,22,"carvajal","hgrid18","h11")
	val hgrid12 = new Host("hgrid12",21,22,"carvajal","hgrid18","h12")
	
	val consumers = #[hgrid1,hgrid18,hgrid20,hgrid4,hgrid5,hgrid6,hgrid7,hgrid8]

	
	//Compilation
	val codeSourcesFolder = "/home/carvajal/nfs/carvajal/sourcecode";
	val serverHost = new Host("hgrid16",21,22,"carvajal","hgrid18","idServer")
	val queueHost = new Host("hgrid17",21,22,"carvajal","hgrid18","idQueue")
	val intermHost = new Host("hgrid14",21,22,"carvajal","hgrid18","idInterm")
	//-------------------------------------------------------------------
	val Host compilationHost = new Host("hgrid17",21,22,"carvajal","hgrid18","compilation")
	
	val associatedHosts = #[serverHost,queueHost,intermHost,hostExternalProbe,hgrid1,hgrid18,hgrid20,hgrid4,hgrid5,hgrid6,hgrid7,hgrid8]
	
	//Bridge_Intermediate_server
	val hostBridgeServer = serverHost
	val hostIntermediate = intermHost
	
	//JMeter
	val Host hostJmeter = serverHost
	
	//-------------------------------------------------------------------
	//</Variables>
	//-------------------------------------------------------------------
	
	val deployHelper = new RetryableDeployment
	
	
	for(i: 1..1)
	{
		deployHelper.deploy([
			
 			add(new ExternalProbe(hostExternalProbe))
			add(new Compilation(compilationHost, codeSourcesFolder,associatedHosts))
			add(new Queue(queueHost))
			add(new Consumers(numCom,numNodes,hgrid1,hgrid18,hgrid20,hgrid4,hgrid5,hgrid6,hgrid7,hgrid8,hgrid9,hgrid10,hgrid11,hgrid12, consumers)) 
			add(new Run_Bridge_Intermediate_Server(hostBridgeServer, hostIntermediate, numNodes, numCom))
			add(new Monitor_1(hgrid1,"monitorh1"))
			add(new Monitor_2(hgrid18,"monitorh18"))
			add(new Monitor_3(hgrid20,"monitorh20"))
			add(new Monitor_4(hgrid4,"monitorh4"))
			add(new Monitor_8(hgrid5,"monitorh5"))
			add(new Monitor_9(hgrid6,"monitorh6"))
			add(new Monitor_10(hgrid7,"monitorh7"))
			add(new Monitor_11(hgrid8,"monitorh8"))
			add(new Monitor_5(intermHost,"monitorInterm"))
			add(new Monitor_6(queueHost,"monitorQueue"))
			add(new Monitor_7(serverHost,"monitorServer"))
			add(new JMeter_Restore_8NO(hostJmeter, "XML-REST-1MB.jmx", hostExternalProbe, reportLoc))
			start(true)
			
		],1)
	}
	
}