/**
 * Copyright 2017 Universidad Icesi
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
package co.edu.icesi.driso.matrices

includes co.edu.icesi.driso.matrices.Common

depends on co.edu.icesi.driso.matrices.HybridMultiplication

/*
 * Execute the NMatrices multiplication strategy.
 */
subsystem NMatrices {
	
	var String common = "mcm-common"
	var String artifact = "mcm-nmatrices"
	var Iterable<String> libpath = #[
	 '«Common.builtsFolder»/«common».jar',
	 '«Common.builtsFolder»/«artifact».jar'
	]
	
	on Common.hosts.values.filter[h|#[
	   "grid11", "grid1", "grid2", "grid7", "grid5"
    ].contains(h.identifier)] {
		init:
			cd Common.builtsFolder
	}
	
	on Common.hosts.get("grid11") {
		knowledge: init;
			run "KnowledgeBase" -libpath libpath

		processor7: knowledge;
			run "Processor7" -libpath libpath
	}
	
	on Common.hosts.get("grid1") {
		processor1: knowledge;
			run "Processor1" -libpath libpath

		processor2: knowledge;
			run "Processor2" -libpath libpath

		distributor: dispatcher;
			run "Distributor" -libpath libpath
	}
	
	on Common.hosts.get("grid2") {
		processor3: knowledge;
			run "Processor3" -libpath libpath

		processor4: knowledge;
			run "Processor4" -libpath libpath
	}
	
	on Common.hosts.get("grid7") {
		processor5: knowledge;
			run "Processor5" -libpath libpath

		processor6: knowledge;
			run "Processor6" -libpath libpath

		dispatcher: processor1, processor2, processor3, 
            processor4, processor5, processor6, 
            processor7;
			run "Dispatcher" -libpath libpath
	}
	
	on Common.hosts.get("grid5") {
		control: distributor;
			run "Control" -libpath libpath
	}
	
}