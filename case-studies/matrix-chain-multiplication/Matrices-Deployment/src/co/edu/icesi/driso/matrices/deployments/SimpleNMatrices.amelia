/**
 * Copyright 2017 Universidad Icesi
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
package co.edu.icesi.driso.matrices.deployments

import co.edu.icesi.driso.matrices.Allocation
import co.edu.icesi.driso.matrices.Common
import co.edu.icesi.driso.matrices.Compile
import co.edu.icesi.driso.matrices.NMatrices
import co.edu.icesi.driso.matrices.classes.Strategy
import java.util.List
import java.util.Map
import org.amelia.dsl.lib.descriptors.Host
import org.amelia.dsl.lib.util.Hosts

includes co.edu.icesi.driso.matrices.Common
includes co.edu.icesi.driso.matrices.Compile
includes co.edu.icesi.driso.matrices.Allocation
includes co.edu.icesi.driso.matrices.NMatrices

/*
 * Deploy the NMatrices strategy once and then
 * stop the executed components.
 */
deployment SimpleNMatrices {	 
	// Load all hosts and then filter
	val Map<String, Host> hosts = Hosts.hosts("hosts.txt").toMap[h|h.identifier]
	val List<Host> executionHosts = #[
	    hosts.get("grid11"), hosts.get("grid1"), hosts.get("grid2"),
	    hosts.get("grid7"), hosts.get("grid5")
	]

	// Add subsystems to deploy
	add(new Common(hosts))
    add(new Compile(Strategy.N_MATRICES, hosts))
    add(new Allocation(executionHosts, hosts))
    add(new NMatrices(hosts))

    // Deploy and then stop the executed components
    start(true)
}