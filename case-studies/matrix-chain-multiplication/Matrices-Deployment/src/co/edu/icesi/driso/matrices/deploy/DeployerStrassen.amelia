package co.edu.icesi.driso.matrices.deploy

import org.amelia.dsl.lib.util.RetryableDeployment
import co.edu.icesi.driso.matrices.Compile 
import co.edu.icesi.driso.matrices.Allocation
import co.edu.icesi.driso.matrices.Strassen 
import java.util.List
import co.edu.icesi.driso.matrices.Common
import org.amelia.dsl.lib.descriptors.Host
import java.util.Map
import org.amelia.dsl.lib.util.Hosts

includes co.edu.icesi.driso.matrices.Common
includes co.edu.icesi.driso.matrices.Compile
includes co.edu.icesi.driso.matrices.Allocation
includes co.edu.icesi.driso.matrices.Strassen

deployment DeployerStrassen
{	
	//BlockReduce = 1.
	//HybridMultiplication = 2;
	//NMatrices = 3;
	//Strassen = 4;
	val Integer strategy = 4;
	 
	//All host.
	val Map<String, Host> hosts = Hosts.hosts("hosts.txt").toMap[h|h.identifier];
	
	val List<Host> executionHosts = #[hosts.get("grid1")];
	
	val deployHelper = new RetryableDeployment
	
	for(i: 1..1)
	{
		deployHelper.deploy([
			add(new Common(hosts))
			add(new Compile(strategy,hosts))
			add(new Allocation(executionHosts,hosts))
			add(new Strassen(hosts))
			start(true)
		],1)
	}
}